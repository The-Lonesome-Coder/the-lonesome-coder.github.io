<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一章 - 關鍵的第一步 - 為何選擇C++</title>
      <link href="/2023-11-05/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E9%97%9C%E9%8D%B5%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5-%E7%82%BA%E4%BD%95%E9%81%B8%E6%93%87c/"/>
      <url>/2023-11-05/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E9%97%9C%E9%8D%B5%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5-%E7%82%BA%E4%BD%95%E9%81%B8%E6%93%87c/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023-11-05/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E9%97%9C%E9%8D%B5%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5-%E7%82%BA%E4%BD%95%E9%81%B8%E6%93%87c/Choice.jpg" alt="每扇打開的門都洋溢著光明，象徵著新機遇和可能性，但選擇哪條路徑卻是每個人必須面對的決定。"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>大家好，很榮幸又和您在此見面。在當今的數字化時代，編程已經成為了必備技能的核心。選擇首個學習的程式語言，就如同選擇學習的第一門外語，充滿了期待與疑惑。那麼，為何我會選擇C++作為我的出發點呢？這其中隱含的原因和影響又會是怎樣的？在以下的文章中，我將分享我的選擇心路歷程，以及C++所帶給我的啟示與挑戰。希望這些心得能為您在編程的道路上提供一絲指引和啟發。<br><br/></p><h2 id="決定第一個語言是否重要"><a href="#決定第一個語言是否重要" class="headerlink" title="決定第一個語言是否重要"></a>決定第一個語言是否重要</h2><p>當我們開始探索編程的世界前，都將面對這關鍵的問題：該選擇哪個程式語言作為起點？這似乎是一道深具分量的問題。有的人認為，第一個語言既影響初學者的起步體驗，又可能對其未來的技術轉型造成深遠影響。但同時，也有關認為第一個語言其實無足輕重，畢竟每個人的程式生涯絕對不可能只接觸一個語言，就如同每種型號的螺絲要使用不同的螺絲起子一樣，不同的問題也會有相對應適合的程式語言來解決。儘管不同人對此有不同的觀點，但我們無法否認，第一個接觸的語言或多或少會塑造我們的技術視野。我個人則認為，第一個語言往往會決定您日後轉入其它語言的適應速度，畢竟由深入淺易，由淺入深難嘛。因此，選擇C++最根本的原因，就是我傾向先苦後甘，先從困難的開始。除此之外，還有幾個原因。<br><br/></p><h2 id="為何選擇C"><a href="#為何選擇C" class="headerlink" title="為何選擇C++"></a>為何選擇C++</h2><p>初探程式時，C++就展現了其在鞏固編程根基上的獨特之處。這是一門促使開發者深入探索電腦運作原理的語言，不僅令人思考“代碼的功能”，更追求其“背後的運作邏輯”。這種深度的洞察，猶如一盞明燈，為學習其他高階語言照亮前路。以C++為例，其核心思想和語法經常滲透於今日的多種程式語言中。因此，當你從C++出發，無論是Python、C#或其他語言，在日後觸碰時你都將更加得心應手。它如同掌中的通用鑰匙，助你順暢地探索多種語言的玄奧。</p><p>再者，C++以出色的性能而自豪。作為一種與硬體更親近的語言，它賦予你近乎直接的記憶體操作能力，讓你能夠細緻調控，追求程式的極致性能。在這個追求效率的時代，能編寫高效程式，已成為職場上的獨特賣點。</p><p>但C++的魅力並不止步於此。其物件導向(Object-Oriented)的特性讓你從初步入手便能學會結構化的設計方法，這對於後續的大型項目開發至關重要。此外，C++還擁有各式各樣的函式庫(Library)，從標準模板庫(Standard Template Library, STL)到各類開源工具，都為開發者開闢了寬廣的學習和實踐場地。這豐富的生態不只滿足你對功能的需求，更刺激你的好奇心，促使你不斷拓展技術視界。</p><p>綜上所述，C++不只是學習程式的良好起點，它鋪設了扎實的基石，激發了解決問題的智慧，並為未來的技術探索展現了無盡可能性。在這趟學習旅程中，每一步都是一次的挑戰，每次的突破都帶來成長和成果。因此，我深信，這條由C++起始的道路，會引領我進入更加廣袤的技術領域。</p><br/><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>感謝您耐心地閱讀完這篇文章。如果您有任何寶貴建議或發現需要改進或錯誤之處，我誠摯地邀請您於下方留言分享。在即將到來的下一章，我將會細緻地引領大家進入編程之旅的第一步，其中涵蓋了如何下載C++編譯器、配置完整的文字編輯器以及進行一些Windows系統相關的環境設置。請繼續關注並期待接下來的內容!</p>]]></content>
      
      
      <categories>
          
          <category> Programming - C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Coding </tag>
            
            <tag> Programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第零章 - 程式之旅 - 我的部落格之始</title>
      <link href="/2023-11-01/%E7%AC%AC%E9%9B%B6%E7%AB%A0-%E5%95%9F%E8%88%AA%E7%A8%8B%E5%BC%8F%E4%B9%8B%E6%97%85-%E6%88%91%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC%E4%B9%8B%E5%A7%8B/"/>
      <url>/2023-11-01/%E7%AC%AC%E9%9B%B6%E7%AB%A0-%E5%95%9F%E8%88%AA%E7%A8%8B%E5%BC%8F%E4%B9%8B%E6%97%85-%E6%88%91%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC%E4%B9%8B%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/2023-11-01/%E7%AC%AC%E9%9B%B6%E7%AB%A0-%E5%95%9F%E8%88%AA%E7%A8%8B%E5%BC%8F%E4%B9%8B%E6%97%85-%E6%88%91%E7%9A%84%E9%83%A8%E8%90%BD%E6%A0%BC%E4%B9%8B%E5%A7%8B/Storm.png" alt="冒著風暴，也要向夢想前行"></p><h2 id="自介"><a href="#自介" class="headerlink" title="自介"></a>自介</h2><p>大家好！我是The Lonesome Coder，很榮幸您閱讀了我的第一篇文章，也很高興能在這裡和您分享我學習程式的過程中所獲得的知識和心得。<br><br/></p><h2 id="創立部落格的原因"><a href="#創立部落格的原因" class="headerlink" title="創立部落格的原因"></a>創立部落格的原因</h2><p>如同宇宙中每顆星辰織錦於夜空，各自璀璨，航行於定命的軌道，每艘扶櫓而行的小船也心懷目標，隨著某個深藏心中、撼動靈魂的夢想而起航。而這艘名為“The Lonesome Coder’s Blog”的小船，懷著目標與我個人的夢想，在今日正式啟航。</p><p>那麼，這支航向未知的小船目標為何? 也許您曾聽過「門徒效應」(The Protege Effect)這一術語。這是當我們教導他人時，自己的理解和記憶也會得到鞏固與加深的現象。每當我探索新的程式設計知識或技巧，我總懷著興奮的心情急於與他人分享。然而，隨著分享的經歷增加，我驚覺，在闡明這些概念時，屢次會碰到自己尚未完全掌握的領域。因此，這艘船銳意航行的方向，便是「透過教學來揭示自我認知的空白，並將知識的光芒傳遞給需要的人」。這不僅幫助我發現自身的不足，也讓我有機會貢獻所學，照亮他人的學習之旅。<br><br/></p><h2 id="選擇自建部落格的原因"><a href="#選擇自建部落格的原因" class="headerlink" title="選擇自建部落格的原因"></a>選擇自建部落格的原因</h2><p>當我決定建立自己的部落格時，市面上有許多現成的平台可以選擇，例如Medium、方格子、痞客邦…等等。當然，使用現成的平台肯定是最輕鬆方便的，什麼都不用管，只要負責寫文章就好了。然而，在查閱了更多資料後，我選擇了使用Hexo與GitHub.io進行部落格建設。這種選擇可能對許多人來說不太常見，畢竟大多數人都希望簡單。以下幾點是讓我選擇自建網站的原因:</p><ol><li><p><strong>完全的控制權</strong><br>使用Hexo架設的部落格，配合GitHub.io的託管(Hosting)，讓我有完全的控制權。我可以決定整個網站的設計、風格和功能。與此相反，Medium等平台雖然提供了一個非常優雅、乾淨的寫作環境，但它們的自訂選項是極度有限的。再者，使用Hexo架構允許我在發佈文章時，可以使用Markdowm語言，而Markdown允許我在發佈程式語言相關內容時可以表現地更清楚。有了完全的控制，我可以確保我的網站不只是另一個千篇一律的部落格，而是真正反映我的個性的、屬於我自己的樂園。</p></li><li><p><strong>學習經驗</strong><br>透過使用Hexo與GitHub.io，我也學習了許多關於網站建設的知識。這些經驗對我來說是寶貴的，它不僅加深了我對Web技術的了解，還強化了我的問題解決能力。</p></li><li><p><strong>成本效益</strong><br>使用GitHub.io來Host我的Hexo部落格是完全免費的。相較之下，要在Medium上移除廣告則需要支付額外的費用。</p></li><li><p><strong>SEO優化</strong><br>除了可以自己學習如何優化網站的SEO外，由於我有完全的控制權，我可以確保我的網站是有達成SEO優化的。這意味著我的文章更容易在搜索引擎中獲得較好的排名，從而吸引更多的讀者。</p></li><li><p><strong>獨立性</strong><br>自己建立部落格意味著不依賴於任何第三方平台的變化和策略轉變。舉個例子，假設Medium改變其政策或營運模式，使用該平台的部落格主可能會受到影響。而我所使用的組合確保了我的內容和讀者基本不受這些外部因素的影響。</p></li></ol><p>如果各位對於自己架設網站有興趣，請在留言區告訴我。我會在日後分享架設網站的過程與步驟。<br><br/></p><h2 id="部落格未來發展"><a href="#部落格未來發展" class="headerlink" title="部落格未來發展"></a>部落格未來發展</h2><p>僅僅兩個月前，我下定決心踏入這個充滿無限可能的電腦世界。起初，面對從何學起的程式語言、解決問題的方法，我感到茫然和不安，經常獨自焦慮，花費長時間搜尋資料。但現在，我已能熟練地運用關鍵字，針對特定問題找到具體的解決方案。在接下來的章節裡，我將與您分享我選擇C++的原因（我沒有嘗試過其他語言，因此不會評論如何選擇第一門語言）、設定編程環境的初始步驟、以及我在學習C++過程中遇到的挑戰與收穫。從基本概念到進階技巧，我將逐步地把這段旅程整理成文章，無論您是初學者或經驗豐富的開發者，我相信這些內容都將為您帶來新的、有趣的洞見。讓我們一同期待這激動人心的學習之旅！<br><br/></p><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>如果想收到我發布文章的消息，除了用關注我的部落格外。也可以追蹤我的IG，我會在那邊發佈新文章已經上線的消息。完整文章會在部落格發表，IG則是該文章的主題與簡短內容(大部分會直接使用前言)。由於還是有正職，所以未來我會以每週 1-2 篇的頻率發文。。如果你有任何想知道的問題或建議的主題，也請在留言區告訴我，任何意見我都會仔細考量。非常感謝。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Coding </tag>
            
            <tag> Programming </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
